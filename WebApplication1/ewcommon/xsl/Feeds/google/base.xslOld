<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="1.0" exclude-result-prefixes="#default ms dt" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ms="urn:schemas-microsoft-com:xslt" xmlns:dt="urn:schemas-microsoft-com:datatypes" xmlns:g="http://base.google.com/ns/1.0">
  <xsl:output method="xml" indent="yes" omit-xml-declaration="no" encoding="UTF-8"/>
  <!--RSS 2.0-->
  <xsl:template match="/Page">
    <rss version ="2.0" xmlns:g="http://base.google.com/ns/1.0">
      <channel>
        <title>
          <xsl:value-of select="Contents/Content[@type='PlainText' and @name='PageTitle']/node()"/>
        </title>
        <description>
          <xsl:text>Products from </xsl:text><xsl:value-of select="Contents/Content[@type='PlainText' and @name='PageTitle']/node()"/>
        </description>
        <link>
          <xsl:value-of select="@baseUrl"/>
        </link>
        <xsl:apply-templates select="Contents/Content[@type='Product']" mode="contentItem"/>
      </channel>
    </rss>
  </xsl:template>

  <xsl:template match="Content[@type='Product']" mode="contentItem">
    <xsl:variable name="parId">
      <xsl:value-of select="@parId"/>
    </xsl:variable>
    <xsl:variable name="parentURL">
      <xsl:call-template name="getContentParURL">
        <xsl:with-param name="parId" select="$parId"/>
      </xsl:call-template>
    </xsl:variable>

    <item>
      <title>
        <xsl:value-of select="Name/node()"/>
      </title>
      <guid>
        <xsl:value-of select="@id"/>
      </guid>
      <g:id>
        <xsl:value-of select="@id"/>
      </g:id>
      <link>
        <xsl:value-of select="/Page/@baseUrl"/>
        <xsl:value-of select="$parentURL"/>/item<xsl:value-of select="@id"/>
        <xsl:text>?utm_source=googleproduct</xsl:text>
      </link>
      
      <g:brand>
        <xsl:value-of select="Manufacturer/node()"/>
      </g:brand>
      <g:mpn>
        <xsl:value-of select="StockCode/node()"/>
      </g:mpn>
      <g:condition>new</g:condition>
      <g:department>
        <xsl:value-of select="/Page/Menu/MenuItem/MenuItem/MenuItem[descendant-or-self::MenuItem/@id=$parId]/DisplayName"/>
      </g:department>
      <g:product_type>
        <xsl:value-of select="/Page/Menu/MenuItem/MenuItem/MenuItem/MenuItem[descendant-or-self::MenuItem/@id=$parId]/DisplayName"/>
      </g:product_type>
      <description>
        <xsl:choose>
          <xsl:when test="Strapline and Strapline/node()!=''">
            <xsl:value-of select="Strapline"/>
          </xsl:when>
          <xsl:when test="BriefDescription and BriefDescription/node()!=''">
            <xsl:value-of select="BriefDescription"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="Name"/>
          </xsl:otherwise>
        </xsl:choose>
      </description>
      <g:expiration_date>
        <xsl:value-of select="/Page/@expireDate"/>
      </g:expiration_date>
      <xsl:if test="Images/img[@class='thumbnail']/@src">
        <g:image_link>
          <xsl:value-of select="/Page/@baseUrl"/>
          <xsl:value-of select="Images/img[@class='thumbnail']/@src"/>
        </g:image_link>
      </xsl:if>
      
      <g:made_in>GB</g:made_in>
      <g:price>
        <xsl:choose>
          <xsl:when test="@curDiscountPrice">
            <xsl:value-of select="@curDiscountPrice"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="Prices/Price[@currency='GBP']/node()"/>
          </xsl:otherwise>
        </xsl:choose>
      </g:price>
      <g:size>
        <xsl:value-of select="Options/OptGroup[@type='Options1']/option[1]/@name"/>
      </g:size>
      <g:payment_accepted>Cash</g:payment_accepted>
      <g:payment_accepted>MasterCard</g:payment_accepted>
      <g:payment_accepted>Visa</g:payment_accepted>
      <g:payment_accepted>Check</g:payment_accepted>
      <g:currency>GBP</g:currency>
    </item>
  </xsl:template>

  <xsl:template name="getContentParURL">
    <xsl:param name="parId"/>
    <xsl:choose>
      <xsl:when test="/Page/Menu/descendant-or-self::MenuItem[@id=$parId]/@url='/'"></xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="/Page/Menu/descendant-or-self::MenuItem[@id=$parId]/@url"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

</xsl:stylesheet>